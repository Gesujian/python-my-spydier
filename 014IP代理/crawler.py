from pyquery import PyQuery as pqimport requestsclass ProxyMetaclass(type):    """定义一个抽象基类，来获取以crawler_开头的方法"""    def __new__(cls, name, bases, attrs):        count = 0        attrs['__CrawlFunc__'] = []        for k, v in attrs.items():            if 'crawl_' in k:                attrs['__CrawlFunc__'].append(k)                count +=1            attrs['__CrawlFuncCount__'] = count        return type.__new__(cls, name, bases, attrs)class Crawler(object, metaclass=ProxyMetaclass):    """从各大网站提取代理"""    def get_proxies(self, callback):        """获取代理        :param callback: 调用的方法名称        :return: 返回得到的代理列表"""        proxies = []        for proxy in eval("self.{}()".format(callback)):            print('成功获取到代理', proxy)            proxies.append(proxy)        return proxies    def crawl_daili66(self, page_count=10):        """从代理66上获取代理        :param page_count:页码        :return: 代理"""        start_url = 'http://www.66ip.cn/{}.html'        urls = [start_url.format(page) for page in range(1, page_count + 1)]        for url in urls:            print('Crawling', url)            html = requests.get(url)            if html:                doc = pq(html.text)                trs = doc('.containerbox table tr:gt(0)').items()                for tr in trs:                    ip = tr.find('td:nth-child(1)').text()                    port = tr.find('td:nth-child(2)').text()                    yield ':'.join([ip, port])    def crawl_kuaidaili(self,page_count=10):        """从快代理上获取代理        :param page_count:页码        :return: 代理"""        start_url = 'https://www.kuaidaili.com/free/inha/{}/'        urls = [start_url.format(page) for page in range(1, page_count + 1)]        for url in urls:            print('Crawling', url)            html = requests.get(url)            if html.status_code == 200:                doc = pq(html.text)                trs = doc('tbody tr').items()                for tr in trs:                    ip = tr.find('td:nth-child(1)').text()                    port = tr.find('td:nth-child(2)').text()                    yield ':'.join([ip, port])    def crawl_qiyundaili(self, page_count=10):        """从旗云代理上获取代理        :param page_count:页码        :return: 代理"""        start_url = 'http://www.qydaili.com/free/?action=china&page={}'        urls = [start_url.format(page) for page in range(1, page_count + 1)]        for url in urls:            print('Crawling', url)            html = requests.get(url)            if html.status_code == 200:                doc = pq(html.text)                trs = doc('tbody tr').items()                for tr in trs:                    ip = tr.find('td:nth-child(1)').text()                    port = tr.find('td:nth-child(2)').text()                    yield ':'.join([ip, port])